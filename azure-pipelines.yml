# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
    - master
    - develop

variables:
    -   group: Firebase

pool:
    vmImage: 'ubuntu-latest'

steps:
    -   task: NodeTool@0
        inputs:
            versionSpec: '16.x'
        displayName: 'Install Node.js'

    -   script: |
            sudo apt-get install -y libgconf-2-4 libgtk2.0-0 libgtk-3-0 libnotify-dev libnss3 libxss1 libasound2 libxtst6 xauth xvfb
        displayName: 'install dependencies'

    -   script: |
            npm install -g @angular/cli
            npm install -g firebase-tools@11.17.0
            npm install -g cross-env
            npm install -g npm
            npm install -g node-gyp make
            npm ci --legacy-peer-deps
        displayName: 'npm install'

    -   script: |
            npm run lint
        displayName: 'Lint the code'

    #- script: |
    #    ng test
    #  displayName: 'Unit test'

#    -   script: |
#            firebase deploy --non-interactive  --project ci --only functions,firestore:rules,firestore:indexes --token $FIREBASE_TOKEN
#        displayName: 'Deploy firebase rules and firebase functions'

    -   script: |
            npm run cy:verify
            npm run build:functions
            firebase use development
            firebase emulators:exec --debug "npm run e2e" --only auth,firestore,functions  --import=./tools/e2e-testing-data
        displayName: 'e2e tests'
        env:
#            SERVICE_ACCOUNT: $(FIREBASE_DEV_SERVICE_ACCOUNT)
            CYPRESS_VERIFY_TIMEOUT: 300000

    #- script: |
    #    ng deploy --token $FIREBASE_TOKEN
    #  displayName: 'Deploy'
    #  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))


    -   script: |
            npm run build:functions && npm run build && firebase deploy --non-interactive  --project stable --token $FIREBASE_TOKEN
        #    ng run build && firebase deploy --non-interactive  --project stable --only functions,firestore:rules,firestore:indexes --token $FIREBASE_TOKEN
        displayName: 'Deploy'
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
